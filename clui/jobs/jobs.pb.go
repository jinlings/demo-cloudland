// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jobs.proto

package jobs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_INIT    Status = 0
	Status_CREATED Status = 1
	Status_RUNNING Status = 2
	Status_DONE    Status = 3
	Status_FAILED  Status = 4
	Status_ABORTED Status = 5
)

var Status_name = map[int32]string{
	0: "INIT",
	1: "CREATED",
	2: "RUNNING",
	3: "DONE",
	4: "FAILED",
	5: "ABORTED",
}

var Status_value = map[string]int32{
	"INIT":    0,
	"CREATED": 1,
	"RUNNING": 2,
	"DONE":    3,
	"FAILED":  4,
	"ABORTED": 5,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{0}
}

type RemoteExecRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Control              string   `protobuf:"bytes,2,opt,name=control,proto3" json:"control,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Extra                int32    `protobuf:"varint,4,opt,name=extra,proto3" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteExecRequest) Reset()         { *m = RemoteExecRequest{} }
func (m *RemoteExecRequest) String() string { return proto.CompactTextString(m) }
func (*RemoteExecRequest) ProtoMessage()    {}
func (*RemoteExecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{0}
}

func (m *RemoteExecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteExecRequest.Unmarshal(m, b)
}
func (m *RemoteExecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteExecRequest.Marshal(b, m, deterministic)
}
func (m *RemoteExecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteExecRequest.Merge(m, src)
}
func (m *RemoteExecRequest) XXX_Size() int {
	return xxx_messageInfo_RemoteExecRequest.Size(m)
}
func (m *RemoteExecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteExecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteExecRequest proto.InternalMessageInfo

func (m *RemoteExecRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RemoteExecRequest) GetControl() string {
	if m != nil {
		return m.Control
	}
	return ""
}

func (m *RemoteExecRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *RemoteExecRequest) GetExtra() int32 {
	if m != nil {
		return m.Extra
	}
	return 0
}

type RemoteExecReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteExecReply) Reset()         { *m = RemoteExecReply{} }
func (m *RemoteExecReply) String() string { return proto.CompactTextString(m) }
func (*RemoteExecReply) ProtoMessage()    {}
func (*RemoteExecReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{1}
}

func (m *RemoteExecReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteExecReply.Unmarshal(m, b)
}
func (m *RemoteExecReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteExecReply.Marshal(b, m, deterministic)
}
func (m *RemoteExecReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteExecReply.Merge(m, src)
}
func (m *RemoteExecReply) XXX_Size() int {
	return xxx_messageInfo_RemoteExecReply.Size(m)
}
func (m *RemoteExecReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteExecReply.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteExecReply proto.InternalMessageInfo

func (m *RemoteExecReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type RunRequest struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Wait                 int32    `protobuf:"varint,2,opt,name=wait,proto3" json:"wait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunRequest) Reset()         { *m = RunRequest{} }
func (m *RunRequest) String() string { return proto.CompactTextString(m) }
func (*RunRequest) ProtoMessage()    {}
func (*RunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{2}
}

func (m *RunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunRequest.Unmarshal(m, b)
}
func (m *RunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunRequest.Marshal(b, m, deterministic)
}
func (m *RunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunRequest.Merge(m, src)
}
func (m *RunRequest) XXX_Size() int {
	return xxx_messageInfo_RunRequest.Size(m)
}
func (m *RunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunRequest proto.InternalMessageInfo

func (m *RunRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *RunRequest) GetWait() int32 {
	if m != nil {
		return m.Wait
	}
	return 0
}

type RunReply struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunReply) Reset()         { *m = RunReply{} }
func (m *RunReply) String() string { return proto.CompactTextString(m) }
func (*RunReply) ProtoMessage()    {}
func (*RunReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{3}
}

func (m *RunReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunReply.Unmarshal(m, b)
}
func (m *RunReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunReply.Marshal(b, m, deterministic)
}
func (m *RunReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunReply.Merge(m, src)
}
func (m *RunReply) XXX_Size() int {
	return xxx_messageInfo_RunReply.Size(m)
}
func (m *RunReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RunReply.DiscardUnknown(m)
}

var xxx_messageInfo_RunReply proto.InternalMessageInfo

func (m *RunReply) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type InvokeRequest struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeRequest) Reset()         { *m = InvokeRequest{} }
func (m *InvokeRequest) String() string { return proto.CompactTextString(m) }
func (*InvokeRequest) ProtoMessage()    {}
func (*InvokeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{4}
}

func (m *InvokeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeRequest.Unmarshal(m, b)
}
func (m *InvokeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeRequest.Marshal(b, m, deterministic)
}
func (m *InvokeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeRequest.Merge(m, src)
}
func (m *InvokeRequest) XXX_Size() int {
	return xxx_messageInfo_InvokeRequest.Size(m)
}
func (m *InvokeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeRequest proto.InternalMessageInfo

func (m *InvokeRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type InvokeReply struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeReply) Reset()         { *m = InvokeReply{} }
func (m *InvokeReply) String() string { return proto.CompactTextString(m) }
func (*InvokeReply) ProtoMessage()    {}
func (*InvokeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{5}
}

func (m *InvokeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeReply.Unmarshal(m, b)
}
func (m *InvokeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeReply.Marshal(b, m, deterministic)
}
func (m *InvokeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeReply.Merge(m, src)
}
func (m *InvokeReply) XXX_Size() int {
	return xxx_messageInfo_InvokeReply.Size(m)
}
func (m *InvokeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeReply.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeReply proto.InternalMessageInfo

func (m *InvokeReply) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type NotifyRequest struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyRequest) Reset()         { *m = NotifyRequest{} }
func (m *NotifyRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyRequest) ProtoMessage()    {}
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{6}
}

func (m *NotifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyRequest.Unmarshal(m, b)
}
func (m *NotifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyRequest.Marshal(b, m, deterministic)
}
func (m *NotifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyRequest.Merge(m, src)
}
func (m *NotifyRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyRequest.Size(m)
}
func (m *NotifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyRequest proto.InternalMessageInfo

func (m *NotifyRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type Event struct {
	JobId                int32    `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	CallbackId           int32    `protobuf:"varint,2,opt,name=callbackId,proto3" json:"callbackId,omitempty"`
	Succeed              bool     `protobuf:"varint,3,opt,name=succeed,proto3" json:"succeed,omitempty"`
	Echo                 string   `protobuf:"bytes,4,opt,name=echo,proto3" json:"echo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{7}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetJobId() int32 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *Event) GetCallbackId() int32 {
	if m != nil {
		return m.CallbackId
	}
	return 0
}

func (m *Event) GetSucceed() bool {
	if m != nil {
		return m.Succeed
	}
	return false
}

func (m *Event) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

type NotifyReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyReply) Reset()         { *m = NotifyReply{} }
func (m *NotifyReply) String() string { return proto.CompactTextString(m) }
func (*NotifyReply) ProtoMessage()    {}
func (*NotifyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{8}
}

func (m *NotifyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyReply.Unmarshal(m, b)
}
func (m *NotifyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyReply.Marshal(b, m, deterministic)
}
func (m *NotifyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyReply.Merge(m, src)
}
func (m *NotifyReply) XXX_Size() int {
	return xxx_messageInfo_NotifyReply.Size(m)
}
func (m *NotifyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyReply.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyReply proto.InternalMessageInfo

type DeleteRequest struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Callback             bool     `protobuf:"varint,2,opt,name=callback,proto3" json:"callback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{9}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *DeleteRequest) GetCallback() bool {
	if m != nil {
		return m.Callback
	}
	return false
}

type DeleteReply struct {
	Deleted              int64    `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReply) Reset()         { *m = DeleteReply{} }
func (m *DeleteReply) String() string { return proto.CompactTextString(m) }
func (*DeleteReply) ProtoMessage()    {}
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{10}
}

func (m *DeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReply.Unmarshal(m, b)
}
func (m *DeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReply.Marshal(b, m, deterministic)
}
func (m *DeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReply.Merge(m, src)
}
func (m *DeleteReply) XXX_Size() int {
	return xxx_messageInfo_DeleteReply.Size(m)
}
func (m *DeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReply proto.InternalMessageInfo

func (m *DeleteReply) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

type ListRequest struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Callback             bool     `protobuf:"varint,2,opt,name=callback,proto3" json:"callback,omitempty"`
	Unscoped             bool     `protobuf:"varint,3,opt,name=unscoped,proto3" json:"unscoped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{11}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *ListRequest) GetCallback() bool {
	if m != nil {
		return m.Callback
	}
	return false
}

func (m *ListRequest) GetUnscoped() bool {
	if m != nil {
		return m.Unscoped
	}
	return false
}

type Job struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Control              string   `protobuf:"bytes,3,opt,name=control,proto3" json:"control,omitempty"`
	Command              string   `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	Extra                int32    `protobuf:"varint,5,opt,name=extra,proto3" json:"extra,omitempty"`
	Hooks                string   `protobuf:"bytes,6,opt,name=hooks,proto3" json:"hooks,omitempty"`
	Echos                int32    `protobuf:"varint,7,opt,name=echos,proto3" json:"echos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_45644d4410f878a7, []int{12}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetControl() string {
	if m != nil {
		return m.Control
	}
	return ""
}

func (m *Job) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Job) GetExtra() int32 {
	if m != nil {
		return m.Extra
	}
	return 0
}

func (m *Job) GetHooks() string {
	if m != nil {
		return m.Hooks
	}
	return ""
}

func (m *Job) GetEchos() int32 {
	if m != nil {
		return m.Echos
	}
	return 0
}

func init() {
	proto.RegisterEnum("com.ibm.cloudland.jobs.Status", Status_name, Status_value)
	proto.RegisterType((*RemoteExecRequest)(nil), "com.ibm.cloudland.jobs.RemoteExecRequest")
	proto.RegisterType((*RemoteExecReply)(nil), "com.ibm.cloudland.jobs.RemoteExecReply")
	proto.RegisterType((*RunRequest)(nil), "com.ibm.cloudland.jobs.RunRequest")
	proto.RegisterType((*RunReply)(nil), "com.ibm.cloudland.jobs.RunReply")
	proto.RegisterType((*InvokeRequest)(nil), "com.ibm.cloudland.jobs.InvokeRequest")
	proto.RegisterType((*InvokeReply)(nil), "com.ibm.cloudland.jobs.InvokeReply")
	proto.RegisterType((*NotifyRequest)(nil), "com.ibm.cloudland.jobs.NotifyRequest")
	proto.RegisterType((*Event)(nil), "com.ibm.cloudland.jobs.Event")
	proto.RegisterType((*NotifyReply)(nil), "com.ibm.cloudland.jobs.NotifyReply")
	proto.RegisterType((*DeleteRequest)(nil), "com.ibm.cloudland.jobs.DeleteRequest")
	proto.RegisterType((*DeleteReply)(nil), "com.ibm.cloudland.jobs.DeleteReply")
	proto.RegisterType((*ListRequest)(nil), "com.ibm.cloudland.jobs.ListRequest")
	proto.RegisterType((*Job)(nil), "com.ibm.cloudland.jobs.Job")
}

func init() { proto.RegisterFile("jobs.proto", fileDescriptor_45644d4410f878a7) }

var fileDescriptor_45644d4410f878a7 = []byte{
	// 616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x6d, 0x9a, 0x3f, 0xed, 0x6e, 0xd4, 0xdf, 0xaf, 0x58, 0x68, 0x8a, 0x8a, 0x40, 0x93, 0x11,
	0xda, 0x86, 0x44, 0x84, 0xb6, 0x27, 0x24, 0x84, 0xb4, 0xd1, 0x80, 0x32, 0x55, 0xa9, 0xe4, 0x0d,
	0x1e, 0xf6, 0x96, 0x38, 0x46, 0xcb, 0x9a, 0xc4, 0xa5, 0x71, 0xc6, 0xf6, 0x3d, 0xf8, 0x06, 0x7c,
	0x51, 0x64, 0xa7, 0x69, 0x53, 0x20, 0x03, 0x2a, 0xde, 0x72, 0xe2, 0xd3, 0x73, 0x6f, 0xee, 0x3d,
	0xa7, 0x06, 0xb8, 0xe6, 0x51, 0xe1, 0xce, 0x17, 0x5c, 0x70, 0xb4, 0x4b, 0x79, 0xe6, 0x26, 0x51,
	0xe6, 0xd2, 0x94, 0x97, 0x71, 0x1a, 0xe6, 0xb1, 0x2b, 0x4f, 0x71, 0x06, 0x0f, 0x08, 0xcb, 0xb8,
	0x60, 0xde, 0x2d, 0xa3, 0x84, 0x7d, 0x2e, 0x59, 0x21, 0xd0, 0x7f, 0xd0, 0x4d, 0x62, 0x47, 0xdb,
	0xd3, 0x0e, 0x4c, 0xd2, 0x4d, 0x62, 0xe4, 0x40, 0x8f, 0xf2, 0x5c, 0x2c, 0x78, 0xea, 0x74, 0xf7,
	0xb4, 0x83, 0x1d, 0x52, 0xc3, 0xea, 0x24, 0xcb, 0xc2, 0x3c, 0x76, 0xf4, 0xfa, 0x44, 0x41, 0xf4,
	0x10, 0x4c, 0x76, 0x2b, 0x16, 0xa1, 0x63, 0x28, 0x99, 0x0a, 0xe0, 0x43, 0xf8, 0xbf, 0x59, 0x6e,
	0x9e, 0xde, 0xa1, 0x5d, 0xb0, 0x0a, 0x11, 0x8a, 0xb2, 0x50, 0x05, 0x77, 0xc8, 0x12, 0xe1, 0x29,
	0x00, 0x29, 0xf3, 0xba, 0xa5, 0x17, 0xa0, 0x5f, 0xf3, 0x48, 0x51, 0xec, 0xa3, 0x47, 0xee, 0xaf,
	0xbf, 0xc6, 0x3d, 0xe3, 0x11, 0x91, 0x3c, 0x84, 0xc0, 0xf8, 0x12, 0x26, 0x42, 0xb5, 0x6b, 0x12,
	0xf5, 0x8c, 0x5f, 0x41, 0x5f, 0x09, 0xca, 0xa2, 0x7f, 0x27, 0x87, 0xdf, 0xc0, 0xc0, 0xcf, 0x6f,
	0xf8, 0x8c, 0x6d, 0xd7, 0x0e, 0x7e, 0x0d, 0x76, 0xfd, 0xfb, 0x2d, 0xaa, 0x8f, 0x61, 0x10, 0x70,
	0x91, 0x7c, 0xba, 0xab, 0xab, 0x1f, 0x83, 0xc9, 0x6e, 0x58, 0x2e, 0x96, 0x0a, 0x8f, 0xdb, 0x14,
	0x3c, 0x49, 0x22, 0x15, 0x17, 0xcf, 0xc0, 0x54, 0x58, 0x6e, 0xe6, 0x9a, 0x47, 0x7e, 0xbd, 0xe0,
	0x0a, 0xa0, 0x27, 0x00, 0x34, 0x4c, 0xd3, 0x28, 0xa4, 0x33, 0x3f, 0x5e, 0xce, 0xad, 0xf1, 0x46,
	0x6e, 0xba, 0x28, 0x29, 0x65, 0xac, 0xda, 0x74, 0x9f, 0xd4, 0x50, 0xce, 0x9a, 0xd1, 0x2b, 0xae,
	0x16, 0xbd, 0x43, 0xd4, 0x33, 0x1e, 0x80, 0x5d, 0xb7, 0x3c, 0x4f, 0xef, 0xf0, 0x25, 0x0c, 0xc6,
	0x2c, 0x65, 0x62, 0xcb, 0xf9, 0xa1, 0x11, 0xf4, 0xeb, 0x56, 0x54, 0x6b, 0x7d, 0xb2, 0xc2, 0x78,
	0x1f, 0xec, 0x5a, 0x5b, 0xce, 0xd6, 0x81, 0x5e, 0xac, 0x60, 0xf5, 0x7d, 0x3a, 0xa9, 0x21, 0x16,
	0x60, 0x4f, 0x92, 0x42, 0xfc, 0xfb, 0x16, 0xe4, 0x59, 0x99, 0x17, 0x94, 0xcf, 0x57, 0xc3, 0x59,
	0x61, 0xfc, 0x4d, 0x03, 0xfd, 0x8c, 0x47, 0x3f, 0x65, 0x6a, 0x6d, 0xfb, 0x6e, 0xd3, 0xf6, 0xcd,
	0xac, 0xe9, 0xad, 0x59, 0x33, 0x5a, 0xb2, 0x66, 0x36, 0xb2, 0x26, 0xdf, 0x5e, 0x71, 0x3e, 0x2b,
	0x1c, 0x4b, 0xb1, 0x2b, 0xa0, 0xb8, 0xf4, 0x8a, 0x17, 0x4e, 0x6f, 0xc9, 0x95, 0xe0, 0xf9, 0x14,
	0xac, 0xf3, 0xaa, 0x7e, 0x1f, 0x0c, 0x3f, 0xf0, 0x2f, 0x86, 0x1d, 0x64, 0x43, 0xef, 0x2d, 0xf1,
	0x4e, 0x2e, 0xbc, 0xf1, 0x50, 0x93, 0x80, 0x7c, 0x08, 0x02, 0x3f, 0x78, 0x3f, 0xec, 0x4a, 0xce,
	0x78, 0x1a, 0x78, 0x43, 0x1d, 0x01, 0x58, 0xef, 0x4e, 0xfc, 0x89, 0x37, 0x1e, 0x1a, 0x92, 0x72,
	0x72, 0x3a, 0x25, 0x92, 0x6f, 0x1e, 0x7d, 0x35, 0x00, 0xce, 0x78, 0x74, 0xce, 0x16, 0x37, 0x09,
	0x65, 0x68, 0x02, 0x3a, 0x29, 0x73, 0x84, 0xdb, 0xc6, 0xbc, 0x4e, 0xfa, 0xe8, 0x7e, 0x37, 0xe3,
	0xce, 0x4b, 0x0d, 0x7d, 0x04, 0xab, 0x8a, 0x13, 0x7a, 0xd6, 0x46, 0xde, 0x88, 0xeb, 0xe8, 0xe9,
	0xef, 0x68, 0xd2, 0xa4, 0x1d, 0xa9, 0x5b, 0xb9, 0xb6, 0x5d, 0x77, 0x23, 0x88, 0xed, 0xba, 0x4d,
	0xf3, 0x2b, 0xdd, 0xca, 0xa2, 0xed, 0xba, 0x1b, 0xf1, 0x68, 0xd7, 0x6d, 0x38, 0x1d, 0x77, 0xd0,
	0x04, 0x0c, 0xe9, 0x68, 0xd4, 0x4a, 0x6f, 0xf8, 0x7d, 0x74, 0x9f, 0xc5, 0xd5, 0x54, 0x23, 0x80,
	0xf5, 0x7f, 0x33, 0x3a, 0x6c, 0x5d, 0xd5, 0x8f, 0xd7, 0xc5, 0x68, 0xff, 0x4f, 0xa8, 0xaa, 0xe3,
	0x53, 0xeb, 0xd2, 0x90, 0x27, 0x91, 0xa5, 0x6e, 0xa5, 0xe3, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xf7, 0x7b, 0x76, 0xa1, 0xa3, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (JobService_RunClient, error)
	Invoke(ctx context.Context, in *InvokeRequest, opts ...grpc.CallOption) (*InvokeReply, error)
	Notify(ctx context.Context, in *NotifyRequest, opts ...grpc.CallOption) (*NotifyReply, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (JobService_ListClient, error)
	RemoteExec(ctx context.Context, in *RemoteExecRequest, opts ...grpc.CallOption) (*RemoteExecReply, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (JobService_RunClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobService_serviceDesc.Streams[0], "/com.ibm.cloudland.jobs.JobService/Run", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobServiceRunClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JobService_RunClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type jobServiceRunClient struct {
	grpc.ClientStream
}

func (x *jobServiceRunClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *jobServiceClient) Invoke(ctx context.Context, in *InvokeRequest, opts ...grpc.CallOption) (*InvokeReply, error) {
	out := new(InvokeReply)
	err := c.cc.Invoke(ctx, "/com.ibm.cloudland.jobs.JobService/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) Notify(ctx context.Context, in *NotifyRequest, opts ...grpc.CallOption) (*NotifyReply, error) {
	out := new(NotifyReply)
	err := c.cc.Invoke(ctx, "/com.ibm.cloudland.jobs.JobService/Notify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := c.cc.Invoke(ctx, "/com.ibm.cloudland.jobs.JobService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (JobService_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobService_serviceDesc.Streams[1], "/com.ibm.cloudland.jobs.JobService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JobService_ListClient interface {
	Recv() (*Job, error)
	grpc.ClientStream
}

type jobServiceListClient struct {
	grpc.ClientStream
}

func (x *jobServiceListClient) Recv() (*Job, error) {
	m := new(Job)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *jobServiceClient) RemoteExec(ctx context.Context, in *RemoteExecRequest, opts ...grpc.CallOption) (*RemoteExecReply, error) {
	out := new(RemoteExecReply)
	err := c.cc.Invoke(ctx, "/com.ibm.cloudland.jobs.JobService/RemoteExec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	Run(*RunRequest, JobService_RunServer) error
	Invoke(context.Context, *InvokeRequest) (*InvokeReply, error)
	Notify(context.Context, *NotifyRequest) (*NotifyReply, error)
	Delete(context.Context, *DeleteRequest) (*DeleteReply, error)
	List(*ListRequest, JobService_ListServer) error
	RemoteExec(context.Context, *RemoteExecRequest) (*RemoteExecReply, error)
}

// UnimplementedJobServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJobServiceServer struct {
}

func (*UnimplementedJobServiceServer) Run(req *RunRequest, srv JobService_RunServer) error {
	return status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedJobServiceServer) Invoke(ctx context.Context, req *InvokeRequest) (*InvokeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invoke not implemented")
}
func (*UnimplementedJobServiceServer) Notify(ctx context.Context, req *NotifyRequest) (*NotifyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Notify not implemented")
}
func (*UnimplementedJobServiceServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedJobServiceServer) List(req *ListRequest, srv JobService_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedJobServiceServer) RemoteExec(ctx context.Context, req *RemoteExecRequest) (*RemoteExecReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoteExec not implemented")
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_Run_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RunRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JobServiceServer).Run(m, &jobServiceRunServer{stream})
}

type JobService_RunServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type jobServiceRunServer struct {
	grpc.ServerStream
}

func (x *jobServiceRunServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _JobService_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ibm.cloudland.jobs.JobService/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).Invoke(ctx, req.(*InvokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_Notify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).Notify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ibm.cloudland.jobs.JobService/Notify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).Notify(ctx, req.(*NotifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ibm.cloudland.jobs.JobService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JobServiceServer).List(m, &jobServiceListServer{stream})
}

type JobService_ListServer interface {
	Send(*Job) error
	grpc.ServerStream
}

type jobServiceListServer struct {
	grpc.ServerStream
}

func (x *jobServiceListServer) Send(m *Job) error {
	return x.ServerStream.SendMsg(m)
}

func _JobService_RemoteExec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoteExecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).RemoteExec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ibm.cloudland.jobs.JobService/RemoteExec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).RemoteExec(ctx, req.(*RemoteExecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.ibm.cloudland.jobs.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _JobService_Invoke_Handler,
		},
		{
			MethodName: "Notify",
			Handler:    _JobService_Notify_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _JobService_Delete_Handler,
		},
		{
			MethodName: "RemoteExec",
			Handler:    _JobService_RemoteExec_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Run",
			Handler:       _JobService_Run_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "List",
			Handler:       _JobService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "jobs.proto",
}
